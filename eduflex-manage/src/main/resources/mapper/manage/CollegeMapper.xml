<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eduflex.manage.mapper.CollegeMapper">
    
    <resultMap type="College" id="CollegeResult">
        <result property="id"    column="id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="ancestors"    column="ancestors"    />
        <result property="name"    column="name"    />
        <result property="parentName" column="parent_name" />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCollegeVo">
        select id, parent_id, ancestors, name, create_by, create_time, update_by, update_time from tb_college
    </sql>

    <select id="selectCollegeList" parameterType="College" resultMap="CollegeResult">
        <include refid="selectCollegeVo"/>
        <where>
            <if test="id != null and id != 0">
                AND id = #{id}
            </if>
            <if test="parentId != null and parentId != 0">
                AND parent_id = #{parentId}
            </if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
        </where>
        order by parent_id
    </select>
    
    <select id="selectCollegeById" parameterType="Long" resultMap="CollegeResult">
        <include refid="selectCollegeVo"/>
        where id = #{id}
    </select>
    <select id="checkCollegeNameUnique" resultMap="CollegeResult">
        <include refid="selectCollegeVo" />
        where name = #{collegeName} and parent_id = #{parentId} limit 1
    </select>

    <insert id="insertCollege" parameterType="College" useGeneratedKeys="true" keyProperty="id">
        insert into tb_college
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">parent_id,</if>
            <if test="ancestors != null">ancestors,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">#{parentId},</if>
            <if test="ancestors != null">#{ancestors},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateCollege" parameterType="College">
        update tb_college
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="ancestors != null">ancestors = #{ancestors},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCollegeById" parameterType="Long">
        delete from tb_college where id = #{id}
    </delete>

    <delete id="deleteCollegeByIds" parameterType="String">
        delete from tb_college where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>