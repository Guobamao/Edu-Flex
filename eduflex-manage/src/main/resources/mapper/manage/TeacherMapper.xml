<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eduflex.manage.mapper.TeacherMapper">
    
    <resultMap type="Teacher" id="TeacherResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="collegeId"    column="college_id"    />
        <result property="userName"    column="user_name"    />
        <result property="nickName"    column="nick_name"    />
        <result property="email"    column="email"    />
        <result property="phonenumber"    column="phonenumber"    />
        <result property="sex"    column="sex"    />
        <result property="avatar"    column="avatar"    />
        <result property="password"    column="password"    />
        <result property="status"    column="status"    />
        <result property="loginIp" column="login_ip"    />
        <result property="loginDate" column="login_date" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
        <result property="remark" column="remark" />
    </resultMap>

    <sql id="selectTeacherVo">
        select t.id, t.user_id, t.college_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.sex, u.avatar, u.status, u.login_ip, u.login_date
        from tb_teacher t
        left join sys_user u on t.user_id = u.user_id
    </sql>

    <select id="selectTeacherList" parameterType="Teacher" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        <where>
            <if test="collegeId != null "> and college_id = #{collegeId}</if>
            <if test="nickName != null"> and nick_name like concat('%', #{nickName}, '%')</if>
            <if test="phonenumber != null" > and phonenumber like concat('%', #{phonenumber}, '%')</if>
        </where>
    </select>

    <select id="selectTeacherById" parameterType="Long" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        where id = #{id}
    </select>

    <select id="checkUserNameUnique" resultType="java.lang.Integer">
        select count(1) from tb_teacher t
        left join sys_user u on t.user_id = u.user_id
        where u.user_name = #{userName}
    </select>

    <select id="checkPhoneUnique" resultType="java.lang.Integer">
        select count(1) from tb_teacher t
        left join sys_user u on t.user_id = u.user_id
        where u.phonenumber = #{phonenumber}
    </select>

    <select id="checkEmailUnique" resultType="java.lang.Integer">
        select count(1) from tb_teacher t
        left join sys_user u on t.user_id = u.user_id
        where u.email = #{email}
    </select>
    <select id="selectUserIdsByTeacherIds">
        select user_id from tb_teacher where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <insert id="insertTeacher" parameterType="Teacher" useGeneratedKeys="true" keyProperty="id">
        insert into tb_teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="collegeId != null">college_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="collegeId != null">#{collegeId},</if>
         </trim>
    </insert>

    <update id="updateTeacher" parameterType="Teacher">
        update tb_teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="collegeId != null">college_id = #{collegeId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeacherById" parameterType="Long">
        delete from tb_teacher where id = #{id}
    </delete>

    <delete id="deleteTeacherByIds" parameterType="String">
        delete from tb_teacher where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>